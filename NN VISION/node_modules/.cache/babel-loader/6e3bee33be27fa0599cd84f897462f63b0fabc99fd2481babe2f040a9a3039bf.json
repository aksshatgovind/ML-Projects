{"ast":null,"code":"var _jsxFileName = \"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/PerceptronSVG.js\",\n  _s = $RefreshSig$();\n// src/components/PerceptronSVG.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerceptronSVG() {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: 'input1',\n    x: 100,\n    y: 100,\n    isDraggable: false\n  }, {\n    id: 'input2',\n    x: 100,\n    y: 150,\n    isDraggable: false\n  }, {\n    id: 'input3',\n    x: 100,\n    y: 200,\n    isDraggable: false\n  }, {\n    id: 'hidden1',\n    x: 300,\n    y: 100,\n    isDraggable: false\n  }, {\n    id: 'hidden2',\n    x: 300,\n    y: 150,\n    isDraggable: false\n  }, {\n    id: 'hidden3',\n    x: 300,\n    y: 200,\n    isDraggable: false\n  }, {\n    id: 'output1',\n    x: 500,\n    y: 100,\n    isDraggable: false\n  }, {\n    id: 'output2',\n    x: 500,\n    y: 150,\n    isDraggable: false\n  }, {\n    id: 'output3',\n    x: 500,\n    y: 200,\n    isDraggable: false\n  }]);\n  const [draggingNode, setDraggingNode] = useState(null);\n  const handleNodeClick = id => {\n    const updatedNodes = nodes.map(node => node.id === id ? {\n      ...node,\n      isDraggable: !node.isDraggable\n    } : node);\n    setNodes(updatedNodes);\n    setDraggingNode(null); // Reset dragging node\n  };\n  const handleMouseDown = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    if (nodes[index].isDraggable) {\n      setDraggingNode(id); // Set dragging node\n    }\n  };\n  const handleMouseMove = e => {\n    if (draggingNode) {\n      const index = nodes.findIndex(node => node.id === draggingNode);\n      const newX = e.clientX - e.target.getBoundingClientRect().left;\n      const newY = e.clientY - e.target.getBoundingClientRect().top;\n      const updatedNodes = [...nodes];\n      updatedNodes[index] = {\n        ...updatedNodes[index],\n        x: newX,\n        y: newY\n      };\n      setNodes(updatedNodes);\n    }\n  };\n  const handleMouseUp = () => {\n    setDraggingNode(null); // Reset dragging node\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"800\",\n    height: \"400\",\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    children: nodes.map(node => /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: node.x,\n      cy: node.y,\n      r: \"15\",\n      fill: \"#ffffff\",\n      stroke: \"#000000\",\n      strokeWidth: \"2\",\n      onClick: () => handleNodeClick(node.id),\n      onMouseDown: e => handleMouseDown(e, node.id),\n      style: {\n        cursor: node.isDraggable ? 'pointer' : 'move'\n      }\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(PerceptronSVG, \"iZmaQo5NWmQoEyboFkz7TBTLZ+I=\");\n_c = PerceptronSVG;\nexport default PerceptronSVG;\nvar _c;\n$RefreshReg$(_c, \"PerceptronSVG\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PerceptronSVG","_s","nodes","setNodes","id","x","y","isDraggable","draggingNode","setDraggingNode","handleNodeClick","updatedNodes","map","node","handleMouseDown","e","index","findIndex","handleMouseMove","newX","clientX","target","getBoundingClientRect","left","newY","clientY","top","handleMouseUp","width","height","onMouseMove","onMouseUp","children","cx","cy","r","fill","stroke","strokeWidth","onClick","onMouseDown","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/PerceptronSVG.js"],"sourcesContent":["// src/components/PerceptronSVG.js\nimport React, { useState } from 'react';\n\nfunction PerceptronSVG() {\n  const [nodes, setNodes] = useState([\n    { id: 'input1', x: 100, y: 100, isDraggable: false },\n    { id: 'input2', x: 100, y: 150, isDraggable: false },\n    { id: 'input3', x: 100, y: 200, isDraggable: false },\n    { id: 'hidden1', x: 300, y: 100, isDraggable: false },\n    { id: 'hidden2', x: 300, y: 150, isDraggable: false },\n    { id: 'hidden3', x: 300, y: 200, isDraggable: false },\n    { id: 'output1', x: 500, y: 100, isDraggable: false },\n    { id: 'output2', x: 500, y: 150, isDraggable: false },\n    { id: 'output3', x: 500, y: 200, isDraggable: false },\n  ]);\n  const [draggingNode, setDraggingNode] = useState(null);\n\n  const handleNodeClick = (id) => {\n    const updatedNodes = nodes.map(node =>\n      node.id === id ? { ...node, isDraggable: !node.isDraggable } : node\n    );\n    setNodes(updatedNodes);\n    setDraggingNode(null); // Reset dragging node\n  };\n\n  const handleMouseDown = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    if (nodes[index].isDraggable) {\n      setDraggingNode(id); // Set dragging node\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (draggingNode) {\n      const index = nodes.findIndex(node => node.id === draggingNode);\n      const newX = e.clientX - e.target.getBoundingClientRect().left;\n      const newY = e.clientY - e.target.getBoundingClientRect().top;\n      const updatedNodes = [...nodes];\n      updatedNodes[index] = { ...updatedNodes[index], x: newX, y: newY };\n      setNodes(updatedNodes);\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDraggingNode(null); // Reset dragging node\n  };\n\n  return (\n    <svg\n      width=\"800\"\n      height=\"400\"\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n    >\n      {nodes.map(node => (\n        <circle\n          key={node.id}\n          cx={node.x}\n          cy={node.y}\n          r=\"15\"\n          fill=\"#ffffff\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          onClick={() => handleNodeClick(node.id)}\n          onMouseDown={(e) => handleMouseDown(e, node.id)}\n          style={{ cursor: node.isDraggable ? 'pointer' : 'move' }}\n        />\n      ))}\n    </svg>\n  );\n}\n\nexport default PerceptronSVG;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}