{"ast":null,"code":"var _jsxFileName = \"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/PerceptronSVG.js\",\n  _s = $RefreshSig$();\n// src/components/PerceptronSVG.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerceptronSVG() {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: 'input1',\n    x: 100,\n    y: 100\n  }, {\n    id: 'input2',\n    x: 100,\n    y: 150\n  }, {\n    id: 'input3',\n    x: 100,\n    y: 200\n  }, {\n    id: 'hidden1',\n    x: 300,\n    y: 100\n  }, {\n    id: 'hidden2',\n    x: 300,\n    y: 150\n  }, {\n    id: 'hidden3',\n    x: 300,\n    y: 200\n  }, {\n    id: 'output1',\n    x: 500,\n    y: 100\n  }, {\n    id: 'output2',\n    x: 500,\n    y: 150\n  }, {\n    id: 'output3',\n    x: 500,\n    y: 200\n  }]);\n  const handleMouseDown = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    const newX = e.clientX - e.target.getBoundingClientRect().left;\n    const newY = e.clientY - e.target.getBoundingClientRect().top;\n    const updatedNodes = [...nodes];\n    updatedNodes[index] = {\n      ...updatedNodes[index],\n      x: newX,\n      y: newY\n    };\n    setNodes(updatedNodes);\n  };\n  const handleMouseMove = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    const newX = e.clientX - e.target.getBoundingClientRect().left;\n    const newY = e.clientY - e.target.getBoundingClientRect().top;\n    const updatedNodes = [...nodes];\n    updatedNodes[index] = {\n      ...updatedNodes[index],\n      x: newX,\n      y: newY\n    };\n    setNodes(updatedNodes);\n  };\n  const handleMouseUp = () => {\n    // Handle mouse up event if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"800\",\n    height: \"400\",\n    children: nodes.map(node => /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: node.x,\n      cy: node.y,\n      r: \"15\",\n      fill: \"#ffffff\",\n      stroke: \"#000000\",\n      strokeWidth: \"2\",\n      onMouseDown: e => handleMouseDown(e, node.id),\n      onMouseMove: e => handleMouseMove(e, node.id),\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      style: {\n        cursor: 'move'\n      }\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PerceptronSVG, \"z4SOBfy29ForlwKH303ltT8NOSc=\");\n_c = PerceptronSVG;\nexport default PerceptronSVG;\nvar _c;\n$RefreshReg$(_c, \"PerceptronSVG\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PerceptronSVG","_s","nodes","setNodes","id","x","y","handleMouseDown","e","index","findIndex","node","newX","clientX","target","getBoundingClientRect","left","newY","clientY","top","updatedNodes","handleMouseMove","handleMouseUp","width","height","children","map","cx","cy","r","fill","stroke","strokeWidth","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/PerceptronSVG.js"],"sourcesContent":["// src/components/PerceptronSVG.js\n\nimport React, { useState } from 'react';\n\nfunction PerceptronSVG() {\n  const [nodes, setNodes] = useState([\n    { id: 'input1', x: 100, y: 100 },\n    { id: 'input2', x: 100, y: 150 },\n    { id: 'input3', x: 100, y: 200 },\n    { id: 'hidden1', x: 300, y: 100 },\n    { id: 'hidden2', x: 300, y: 150 },\n    { id: 'hidden3', x: 300, y: 200 },\n    { id: 'output1', x: 500, y: 100 },\n    { id: 'output2', x: 500, y: 150 },\n    { id: 'output3', x: 500, y: 200 },\n  ]);\n\n  const handleMouseDown = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    const newX = e.clientX - e.target.getBoundingClientRect().left;\n    const newY = e.clientY - e.target.getBoundingClientRect().top;\n    const updatedNodes = [...nodes];\n    updatedNodes[index] = { ...updatedNodes[index], x: newX, y: newY };\n    setNodes(updatedNodes);\n  };\n\n  const handleMouseMove = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    const newX = e.clientX - e.target.getBoundingClientRect().left;\n    const newY = e.clientY - e.target.getBoundingClientRect().top;\n    const updatedNodes = [...nodes];\n    updatedNodes[index] = { ...updatedNodes[index], x: newX, y: newY };\n    setNodes(updatedNodes);\n  };\n\n  const handleMouseUp = () => {\n    // Handle mouse up event if needed\n  };\n\n  return (\n    <svg width=\"800\" height=\"400\">\n      {nodes.map(node => (\n        <circle\n          key={node.id}\n          cx={node.x}\n          cy={node.y}\n          r=\"15\"\n          fill=\"#ffffff\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          onMouseDown={(e) => handleMouseDown(e, node.id)}\n          onMouseMove={(e) => handleMouseMove(e, node.id)}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n          style={{ cursor: 'move' }}\n        />\n      ))}\n    </svg>\n  );\n}\n\nexport default PerceptronSVG;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}