{"ast":null,"code":"var _jsxFileName = \"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/PerceptronSVG.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerceptronSVG() {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: 'input1',\n    x: 100,\n    y: 100,\n    isDraggable: false\n  }, {\n    id: 'input2',\n    x: 100,\n    y: 150,\n    isDraggable: false\n  }, {\n    id: 'input3',\n    x: 100,\n    y: 200,\n    isDraggable: false\n  }, {\n    id: 'hidden1',\n    x: 300,\n    y: 100,\n    isDraggable: false\n  }, {\n    id: 'hidden2',\n    x: 300,\n    y: 150,\n    isDraggable: false\n  }, {\n    id: 'hidden3',\n    x: 300,\n    y: 200,\n    isDraggable: false\n  }, {\n    id: 'output1',\n    x: 500,\n    y: 100,\n    isDraggable: false\n  }, {\n    id: 'output2',\n    x: 500,\n    y: 150,\n    isDraggable: false\n  }, {\n    id: 'output3',\n    x: 500,\n    y: 200,\n    isDraggable: false\n  }]);\n  const handleNodeClick = id => {\n    const updatedNodes = nodes.map(node => node.id === id ? {\n      ...node,\n      isDraggable: !node.isDraggable\n    } : node);\n    setNodes(updatedNodes);\n  };\n  const handleMouseDown = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    if (nodes[index].isDraggable) {\n      const newX = e.clientX - e.target.getBoundingClientRect().left;\n      const newY = e.clientY - e.target.getBoundingClientRect().top;\n      const updatedNodes = [...nodes];\n      updatedNodes[index] = {\n        ...updatedNodes[index],\n        x: newX,\n        y: newY\n      };\n      setNodes(updatedNodes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"800\",\n    height: \"400\",\n    children: nodes.map(node => /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: node.x,\n      cy: node.y,\n      r: \"15\",\n      fill: \"#ffffff\",\n      stroke: \"#000000\",\n      strokeWidth: \"2\",\n      onClick: () => handleNodeClick(node.id),\n      onMouseDown: e => handleMouseDown(e, node.id),\n      style: {\n        cursor: node.isDraggable ? 'pointer' : 'move'\n      }\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(PerceptronSVG, \"lKukfHasd2y3KYheFRp/iDZRdYY=\");\n_c = PerceptronSVG;\nexport default PerceptronSVG;\nvar _c;\n$RefreshReg$(_c, \"PerceptronSVG\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PerceptronSVG","_s","nodes","setNodes","id","x","y","isDraggable","handleNodeClick","updatedNodes","map","node","handleMouseDown","e","index","findIndex","newX","clientX","target","getBoundingClientRect","left","newY","clientY","top","width","height","children","cx","cy","r","fill","stroke","strokeWidth","onClick","onMouseDown","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/PerceptronSVG.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction PerceptronSVG() {\n  const [nodes, setNodes] = useState([\n    { id: 'input1', x: 100, y: 100, isDraggable: false },\n    { id: 'input2', x: 100, y: 150, isDraggable: false },\n    { id: 'input3', x: 100, y: 200, isDraggable: false },\n    { id: 'hidden1', x: 300, y: 100, isDraggable: false },\n    { id: 'hidden2', x: 300, y: 150, isDraggable: false },\n    { id: 'hidden3', x: 300, y: 200, isDraggable: false },\n    { id: 'output1', x: 500, y: 100, isDraggable: false },\n    { id: 'output2', x: 500, y: 150, isDraggable: false },\n    { id: 'output3', x: 500, y: 200, isDraggable: false },\n  ]);\n\n  const handleNodeClick = (id) => {\n    const updatedNodes = nodes.map(node =>\n      node.id === id ? { ...node, isDraggable: !node.isDraggable } : node\n    );\n    setNodes(updatedNodes);\n  };\n\n  const handleMouseDown = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    if (nodes[index].isDraggable) {\n      const newX = e.clientX - e.target.getBoundingClientRect().left;\n      const newY = e.clientY - e.target.getBoundingClientRect().top;\n      const updatedNodes = [...nodes];\n      updatedNodes[index] = { ...updatedNodes[index], x: newX, y: newY };\n      setNodes(updatedNodes);\n    }\n  };\n\n  return (\n    <svg width=\"800\" height=\"400\">\n      {nodes.map(node => (\n        <circle\n          key={node.id}\n          cx={node.x}\n          cy={node.y}\n          r=\"15\"\n          fill=\"#ffffff\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          onClick={() => handleNodeClick(node.id)}\n          onMouseDown={(e) => handleMouseDown(e, node.id)}\n          style={{ cursor: node.isDraggable ? 'pointer' : 'move' }}\n        />\n      ))}\n    </svg>\n  );\n}\n\nexport default PerceptronSVG;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}