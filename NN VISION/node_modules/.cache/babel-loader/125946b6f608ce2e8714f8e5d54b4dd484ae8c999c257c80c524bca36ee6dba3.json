{"ast":null,"code":"var _jsxFileName = \"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NeuralNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NeuralNetwork({\n  inputValues,\n  architecture = 'FCNN'\n}) {\n  _s();\n  const [hiddenNodes, setHiddenNodes] = useState([{\n    id: 'hidden1',\n    x: 300,\n    y: 150,\n    value: 0\n  }, {\n    id: 'hidden2',\n    x: 300,\n    y: 250,\n    value: 0\n  }, {\n    id: 'hidden3',\n    x: 300,\n    y: 350,\n    value: 0\n  }, {\n    id: 'hidden4',\n    x: 300,\n    y: 450,\n    value: 0\n  }]);\n  const [outputNode, setOutputNode] = useState({\n    id: 'output',\n    x: 700,\n    y: 300,\n    activation: 0,\n    color: 'red',\n    size: 30 // Added size for output node customization\n  });\n  const [inputNodeValues, setInputNodeValues] = useState({\n    input1: 0,\n    input2: 0,\n    input3: 0\n  });\n  const [inputToHiddenWeights, setInputToHiddenWeights] = useState(() => {\n    const weights = [];\n    for (let i = 0; i < 4; i++) {\n      weights.push(Array(3).fill(0));\n    }\n    return weights;\n  });\n  const [edges, setEdges] = useState([]);\n  const [inputsComplete, setInputsComplete] = useState(false);\n  const [outputNodeValue, setOutputNodeValue] = useState(0);\n\n  // New state for customizable properties (edges, nodes)\n  const [nodeSize, setNodeSize] = useState(30); // Default size for all nodes\n  const [edgeWidth, setEdgeWidth] = useState(2); // Default edge width\n\n  // Handle node size change\n  const handleNodeSizeChange = e => {\n    setNodeSize(parseFloat(e.target.value));\n  };\n\n  // Handle edge width change\n  const handleEdgeWidthChange = e => {\n    setEdgeWidth(parseFloat(e.target.value));\n  };\n\n  // Generates edges between input and hidden nodes based on weights\n  const generateRandomEdges = () => {\n    const edges = [];\n    for (let i = 0; i < hiddenNodes.length; i++) {\n      const target = hiddenNodes[i].id;\n      for (let j = 0; j < 3; j++) {\n        const source = `input${j + 1}`;\n        const weight = inputToHiddenWeights[i][j];\n        edges.push({\n          source,\n          target,\n          weight\n        });\n      }\n    }\n    return edges;\n  };\n  const calculateHiddenNodeValue = (hiddenNode, inputNodeValues, edges) => {\n    const value = edges.filter(edge => edge.target === hiddenNode.id).reduce((acc, edge) => {\n      const inputValue = inputNodeValues[edge.source];\n      const weight = edge.weight;\n      return acc + inputValue * weight;\n    }, 0);\n    return value >= 0 ? value : 0; // Using ReLU activation function\n  };\n  const calculateOutputNodeValue = () => {\n    const summation = hiddenNodes.reduce((acc, hiddenNode) => {\n      const weight = Math.random() * 2 - 1; // Random weight between hidden and output\n      return acc + hiddenNode.value * weight;\n    }, 0);\n    return Math.max(0, summation); // Using ReLU activation for the output node as well\n  };\n  useEffect(() => {\n    setInputNodeValues(inputValues);\n  }, [inputValues]);\n  useEffect(() => {\n    if (inputsComplete) {\n      const updatedHiddenNodes = hiddenNodes.map((hiddenNode, index) => {\n        const value = calculateHiddenNodeValue(hiddenNode, inputNodeValues, edges);\n        return {\n          ...hiddenNode,\n          value\n        };\n      });\n      setHiddenNodes(updatedHiddenNodes);\n    }\n  }, [inputNodeValues, inputsComplete, edges, hiddenNodes]);\n  useEffect(() => {\n    setEdges(generateRandomEdges());\n  }, [inputNodeValues, hiddenNodes, inputToHiddenWeights]);\n  const handleInputComplete = () => {\n    setInputsComplete(true);\n  };\n  const handleOutputCalculation = () => {\n    const outputValue = calculateOutputNodeValue();\n    setOutputNodeValue(outputValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NeuralNetwork\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"t\",\n      children: \"NN VISION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Node Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"50\",\n          value: nodeSize,\n          onChange: handleNodeSizeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Edge Width:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: edgeWidth,\n          onChange: handleEdgeWidthChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"1200\",\n      height: \"800\",\n      children: [[...Array(3).keys()].map(i => [...Array(4).keys()].map(j => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: 130,\n          y1: (i + 1) * 210,\n          x2: 370,\n          y2: (j + 1) * 175,\n          stroke: \"black\",\n          strokeWidth: edgeWidth,\n          markerEnd: \"url(#arrowhead)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n          x: (130 + 350) / 2 - 1,\n          y: (i + 1) * 185 + ((j + 1) * 210 - (i + 1) * 210) / 2 - 10,\n          width: \"20\",\n          height: \"20\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: \"30px\",\n              height: \"20px\"\n            },\n            value: inputToHiddenWeights[j][i],\n            onChange: e => handleWeightChange(e, j, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, `input-hidden-${i}-${j}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this))), [...Array(4).keys()].map(index => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: 429,\n          y1: (index + 1) * 176,\n          x2: 619,\n          y2: 400,\n          stroke: \"black\",\n          strokeWidth: edgeWidth,\n          markerEnd: \"url(#arrowhead)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n          x: (400 + 650) / 2 - 10,\n          y: (index + 1) * 190 + (410 - (index + 1) * 210) / 2 - 10,\n          width: \"20\",\n          height: \"20\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: \"30px\",\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, `hidden-output-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)), Object.keys(inputNodeValues).map((input, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 100,\n          cy: (index + 1) * 210,\n          r: nodeSize,\n          fill: \"green\",\n          opacity: \"0.66\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 100,\n          y: (index + 1) * 210,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: `I ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 100,\n          y: (index + 1) * 210 + 50,\n          fill: \"black\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: inputNodeValues[input]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, input, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)), hiddenNodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: node.x + 100,\n          cy: node.y * 1.8 - 104,\n          r: nodeSize,\n          fill: \"blue\",\n          opacity: \"0.66\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: node.x + 100,\n          y: node.y * 1.8 - 104,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: `H ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: node.x + 100,\n          y: node.y * 1.8 - 104 + 50,\n          fill: \"black\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: node.value.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, `hidden-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: outputNode.x - 50,\n          cy: outputNode.y + 100,\n          r: outputNode.size,\n          fill: outputNode.color,\n          opacity: \"0.7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: outputNode.x - 50,\n          y: outputNode.y + 100,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: \"Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: outputNode.x - 50,\n          y: outputNode.y + 100 + 50,\n          fill: \"black\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: outputNodeValue.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, `output`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"arrowhead\",\n        markerWidth: \"9\",\n        markerHeight: \"8\",\n        refX: \"8\",\n        refY: \"3\",\n        orient: \"auto\",\n        fill: \"black\",\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"0 0, 10 3, 0 6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [!inputsComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInputComplete,\n        children: \"Calculate Hidden Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }, this), inputsComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOutputCalculation,\n        children: \"Calculate Output Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(NeuralNetwork, \"GfH+KiZH9jFpHP/YB9TJmpIRBGs=\");\n_c = NeuralNetwork;\nexport default NeuralNetwork;\nvar _c;\n$RefreshReg$(_c, \"NeuralNetwork\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NeuralNetwork","inputValues","architecture","_s","hiddenNodes","setHiddenNodes","id","x","y","value","outputNode","setOutputNode","activation","color","size","inputNodeValues","setInputNodeValues","input1","input2","input3","inputToHiddenWeights","setInputToHiddenWeights","weights","i","push","Array","fill","edges","setEdges","inputsComplete","setInputsComplete","outputNodeValue","setOutputNodeValue","nodeSize","setNodeSize","edgeWidth","setEdgeWidth","handleNodeSizeChange","e","parseFloat","target","handleEdgeWidthChange","generateRandomEdges","length","j","source","weight","calculateHiddenNodeValue","hiddenNode","filter","edge","reduce","acc","inputValue","calculateOutputNodeValue","summation","Math","random","max","updatedHiddenNodes","map","index","handleInputComplete","handleOutputCalculation","outputValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","onChange","width","height","keys","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","style","handleWeightChange","Object","input","cx","cy","r","opacity","textAnchor","alignmentBaseline","node","toFixed","markerWidth","markerHeight","refX","refY","orient","points","onClick","_c","$RefreshReg$"],"sources":["/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NeuralNetwork.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction NeuralNetwork({ inputValues, architecture = 'FCNN' }) {\n  const [hiddenNodes, setHiddenNodes] = useState([\n    { id: 'hidden1', x: 300, y: 150, value: 0 },\n    { id: 'hidden2', x: 300, y: 250, value: 0 },\n    { id: 'hidden3', x: 300, y: 350, value: 0 },\n    { id: 'hidden4', x: 300, y: 450, value: 0 },\n  ]);\n  const [outputNode, setOutputNode] = useState({\n    id: 'output',\n    x: 700,\n    y: 300,\n    activation: 0,\n    color: 'red',\n    size: 30, // Added size for output node customization\n  });\n  const [inputNodeValues, setInputNodeValues] = useState({\n    input1: 0,\n    input2: 0,\n    input3: 0,\n  });\n  const [inputToHiddenWeights, setInputToHiddenWeights] = useState(() => {\n    const weights = [];\n    for (let i = 0; i < 4; i++) {\n      weights.push(Array(3).fill(0)); \n    }\n    return weights;\n  });\n  const [edges, setEdges] = useState([]);\n  const [inputsComplete, setInputsComplete] = useState(false);\n  const [outputNodeValue, setOutputNodeValue] = useState(0);\n\n  // New state for customizable properties (edges, nodes)\n  const [nodeSize, setNodeSize] = useState(30);  // Default size for all nodes\n  const [edgeWidth, setEdgeWidth] = useState(2); // Default edge width\n\n  // Handle node size change\n  const handleNodeSizeChange = (e) => {\n    setNodeSize(parseFloat(e.target.value));\n  };\n\n  // Handle edge width change\n  const handleEdgeWidthChange = (e) => {\n    setEdgeWidth(parseFloat(e.target.value));\n  };\n\n  // Generates edges between input and hidden nodes based on weights\n  const generateRandomEdges = () => {\n    const edges = [];\n    for (let i = 0; i < hiddenNodes.length; i++) {\n      const target = hiddenNodes[i].id;\n      for (let j = 0; j < 3; j++) {\n        const source = `input${j + 1}`;\n        const weight = inputToHiddenWeights[i][j]; \n        edges.push({ source, target, weight });\n      }\n    }\n    return edges;\n  };\n\n  const calculateHiddenNodeValue = (hiddenNode, inputNodeValues, edges) => {\n    const value = edges\n      .filter(edge => edge.target === hiddenNode.id)\n      .reduce((acc, edge) => {\n        const inputValue = inputNodeValues[edge.source];\n        const weight = edge.weight;\n        return acc + inputValue * weight;\n      }, 0);\n    return value >= 0 ? value : 0; // Using ReLU activation function\n  };\n\n  const calculateOutputNodeValue = () => {\n    const summation = hiddenNodes.reduce((acc, hiddenNode) => {\n      const weight = Math.random() * 2 - 1; // Random weight between hidden and output\n      return acc + hiddenNode.value * weight;\n    }, 0);\n\n    return Math.max(0, summation); // Using ReLU activation for the output node as well\n  };\n\n  useEffect(() => {\n    setInputNodeValues(inputValues);\n  }, [inputValues]);\n\n  useEffect(() => {\n    if (inputsComplete) {\n      const updatedHiddenNodes = hiddenNodes.map((hiddenNode, index) => {\n        const value = calculateHiddenNodeValue(hiddenNode, inputNodeValues, edges);\n        return { ...hiddenNode, value };\n      });\n      setHiddenNodes(updatedHiddenNodes);\n    }\n  }, [inputNodeValues, inputsComplete, edges, hiddenNodes]);\n\n  useEffect(() => {\n    setEdges(generateRandomEdges());\n  }, [inputNodeValues, hiddenNodes, inputToHiddenWeights]);\n\n  const handleInputComplete = () => {\n    setInputsComplete(true);\n  };\n\n  const handleOutputCalculation = () => {\n    const outputValue = calculateOutputNodeValue();\n    setOutputNodeValue(outputValue);\n  };\n\n  return (\n    <div className=\"NeuralNetwork\">\n      <div className=\"t\">NN VISION</div>\n\n      {/* Node and Edge Customization Section */}\n      <div className=\"controls\">\n        <label>\n          Node Size:\n          <input type=\"range\" min=\"10\" max=\"50\" value={nodeSize} onChange={handleNodeSizeChange} />\n        </label>\n        <label>\n          Edge Width:\n          <input type=\"range\" min=\"1\" max=\"10\" value={edgeWidth} onChange={handleEdgeWidthChange} />\n        </label>\n      </div>\n\n      <svg width=\"1200\" height=\"800\">\n        {/* Drawing Input to Hidden connections */}\n        {[...Array(3).keys()].map((i) => (\n          [...Array(4).keys()].map((j) => (\n            <g key={`input-hidden-${i}-${j}`}>\n              <line\n                x1={130}\n                y1={(i + 1) * 210}\n                x2={370}\n                y2={(j + 1) * 175}\n                stroke=\"black\"\n                strokeWidth={edgeWidth}\n                markerEnd=\"url(#arrowhead)\"\n              />\n              <foreignObject x={(130 + 350) / 2 - 1} y={(i + 1) * 185 + ((j + 1) * 210 - (i + 1) * 210) / 2 - 10} width=\"20\" height=\"20\">\n                <input\n                  type=\"number\"\n                  style={{ width: \"30px\", height: \"20px\" }}\n                  value={inputToHiddenWeights[j][i]} \n                  onChange={(e) => handleWeightChange(e, j, i)} \n                />\n              </foreignObject>\n            </g>\n          ))\n        ))}\n\n        {/* Drawing Hidden to Output connections */}\n        {[...Array(4).keys()].map((index) => (\n          <g key={`hidden-output-${index}`}>\n            <line\n              x1={429}\n              y1={(index + 1) * 176}\n              x2={619}\n              y2={400}\n              stroke=\"black\"\n              strokeWidth={edgeWidth}\n              markerEnd=\"url(#arrowhead)\"\n            />\n            <foreignObject x={(400 + 650) / 2 - 10} y={(index + 1) * 190 + (410 - (index + 1) * 210) / 2 - 10} width=\"20\" height=\"20\">\n              <input type=\"number\" style={{ width: \"30px\", height: \"20px\" }} />\n            </foreignObject>\n          </g>\n        ))}\n\n        {/* Drawing Input Nodes */}\n        {Object.keys(inputNodeValues).map((input, index) => (\n          <g key={input}>\n            <circle cx={100} cy={(index + 1) * 210} r={nodeSize} fill=\"green\" opacity=\"0.66\" />\n            <text x={100} y={(index + 1) * 210} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">{`I ${index + 1}`}</text>\n            <text x={100} y={(index + 1) * 210 + 50} fill=\"black\" textAnchor=\"middle\" alignmentBaseline=\"central\">{inputNodeValues[input]}</text>\n          </g>\n        ))}\n\n        {/* Drawing Hidden Nodes */}\n        {hiddenNodes.map((node, index) => (\n          <g key={`hidden-${index}`}>\n            <circle cx={node.x + 100} cy={node.y * 1.8 - 104} r={nodeSize} fill=\"blue\" opacity=\"0.66\" />\n            <text x={node.x + 100} y={node.y * 1.8 - 104} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">{`H ${index + 1}`}</text>\n            <text x={node.x + 100} y={node.y * 1.8 - 104 + 50} fill=\"black\" textAnchor=\"middle\" alignmentBaseline=\"central\">{node.value.toFixed(2)}</text>\n          </g>\n        ))}\n\n        {/* Drawing Output Node */}\n        <g key={`output`}>\n          <circle cx={outputNode.x - 50} cy={outputNode.y + 100} r={outputNode.size} fill={outputNode.color} opacity=\"0.7\" />\n          <text x={outputNode.x - 50} y={outputNode.y + 100} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">Out</text>\n          <text x={outputNode.x - 50} y={outputNode.y + 100 + 50} fill=\"black\" textAnchor=\"middle\" alignmentBaseline=\"central\">\n            {outputNodeValue.toFixed(2)}\n          </text>\n        </g>\n\n        <marker id=\"arrowhead\" markerWidth=\"9\" markerHeight=\"8\" refX=\"8\" refY=\"3\" orient=\"auto\" fill=\"black\">\n          <polygon points=\"0 0, 10 3, 0 6\" />\n        </marker>\n      </svg>\n\n      <div className=\"buttons\">\n        {!inputsComplete && <button onClick={handleInputComplete}>Calculate Hidden Values</button>}\n        {inputsComplete && <button onClick={handleOutputCalculation}>Calculate Output Value</button>}\n      </div>\n    </div>\n  );\n}\n\nexport default NeuralNetwork;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAC;EAAEC,WAAW;EAAEC,YAAY,GAAG;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAC7C;IAAEU,EAAE,EAAE,SAAS;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3C;IAAEH,EAAE,EAAE,SAAS;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3C;IAAEH,EAAE,EAAE,SAAS;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3C;IAAEH,EAAE,EAAE,SAAS;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC5C,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC;IAC3CU,EAAE,EAAE,QAAQ;IACZC,CAAC,EAAE,GAAG;IACNC,CAAC,EAAE,GAAG;IACNI,UAAU,EAAE,CAAC;IACbC,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE,EAAE,CAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC;IACrDqB,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGzB,QAAQ,CAAC,MAAM;IACrE,MAAM0B,OAAO,GAAG,EAAE;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,OAAO,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC;IACA,OAAOJ,OAAO;EAChB,CAAC,CAAC;EACF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;;EAEzD;EACA,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMyC,oBAAoB,GAAIC,CAAC,IAAK;IAClCJ,WAAW,CAACK,UAAU,CAACD,CAAC,CAACE,MAAM,CAAC/B,KAAK,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAMgC,qBAAqB,GAAIH,CAAC,IAAK;IACnCF,YAAY,CAACG,UAAU,CAACD,CAAC,CAACE,MAAM,CAAC/B,KAAK,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMiC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMf,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,WAAW,CAACuC,MAAM,EAAEpB,CAAC,EAAE,EAAE;MAC3C,MAAMiB,MAAM,GAAGpC,WAAW,CAACmB,CAAC,CAAC,CAACjB,EAAE;MAChC,KAAK,IAAIsC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,MAAMC,MAAM,GAAG,QAAQD,CAAC,GAAG,CAAC,EAAE;QAC9B,MAAME,MAAM,GAAG1B,oBAAoB,CAACG,CAAC,CAAC,CAACqB,CAAC,CAAC;QACzCjB,KAAK,CAACH,IAAI,CAAC;UAAEqB,MAAM;UAAEL,MAAM;UAAEM;QAAO,CAAC,CAAC;MACxC;IACF;IACA,OAAOnB,KAAK;EACd,CAAC;EAED,MAAMoB,wBAAwB,GAAGA,CAACC,UAAU,EAAEjC,eAAe,EAAEY,KAAK,KAAK;IACvE,MAAMlB,KAAK,GAAGkB,KAAK,CAChBsB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,MAAM,KAAKQ,UAAU,CAAC1C,EAAE,CAAC,CAC7C6C,MAAM,CAAC,CAACC,GAAG,EAAEF,IAAI,KAAK;MACrB,MAAMG,UAAU,GAAGtC,eAAe,CAACmC,IAAI,CAACL,MAAM,CAAC;MAC/C,MAAMC,MAAM,GAAGI,IAAI,CAACJ,MAAM;MAC1B,OAAOM,GAAG,GAAGC,UAAU,GAAGP,MAAM;IAClC,CAAC,EAAE,CAAC,CAAC;IACP,OAAOrC,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAM6C,wBAAwB,GAAGA,CAAA,KAAM;IACrC,MAAMC,SAAS,GAAGnD,WAAW,CAAC+C,MAAM,CAAC,CAACC,GAAG,EAAEJ,UAAU,KAAK;MACxD,MAAMF,MAAM,GAAGU,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MACtC,OAAOL,GAAG,GAAGJ,UAAU,CAACvC,KAAK,GAAGqC,MAAM;IACxC,CAAC,EAAE,CAAC,CAAC;IAEL,OAAOU,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEH,SAAS,CAAC,CAAC,CAAC;EACjC,CAAC;EAED1D,SAAS,CAAC,MAAM;IACdmB,kBAAkB,CAACf,WAAW,CAAC;EACjC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjBJ,SAAS,CAAC,MAAM;IACd,IAAIgC,cAAc,EAAE;MAClB,MAAM8B,kBAAkB,GAAGvD,WAAW,CAACwD,GAAG,CAAC,CAACZ,UAAU,EAAEa,KAAK,KAAK;QAChE,MAAMpD,KAAK,GAAGsC,wBAAwB,CAACC,UAAU,EAAEjC,eAAe,EAAEY,KAAK,CAAC;QAC1E,OAAO;UAAE,GAAGqB,UAAU;UAAEvC;QAAM,CAAC;MACjC,CAAC,CAAC;MACFJ,cAAc,CAACsD,kBAAkB,CAAC;IACpC;EACF,CAAC,EAAE,CAAC5C,eAAe,EAAEc,cAAc,EAAEF,KAAK,EAAEvB,WAAW,CAAC,CAAC;EAEzDP,SAAS,CAAC,MAAM;IACd+B,QAAQ,CAACc,mBAAmB,CAAC,CAAC,CAAC;EACjC,CAAC,EAAE,CAAC3B,eAAe,EAAEX,WAAW,EAAEgB,oBAAoB,CAAC,CAAC;EAExD,MAAM0C,mBAAmB,GAAGA,CAAA,KAAM;IAChChC,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMiC,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,WAAW,GAAGV,wBAAwB,CAAC,CAAC;IAC9CtB,kBAAkB,CAACgC,WAAW,CAAC;EACjC,CAAC;EAED,oBACEjE,OAAA;IAAKkE,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BnE,OAAA;MAAKkE,SAAS,EAAC,GAAG;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAGlCvE,OAAA;MAAKkE,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBnE,OAAA;QAAAmE,QAAA,GAAO,YAEL,eAAAnE,OAAA;UAAOwE,IAAI,EAAC,OAAO;UAACC,GAAG,EAAC,IAAI;UAACd,GAAG,EAAC,IAAI;UAACjD,KAAK,EAAEwB,QAAS;UAACwC,QAAQ,EAAEpC;QAAqB;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC,eACRvE,OAAA;QAAAmE,QAAA,GAAO,aAEL,eAAAnE,OAAA;UAAOwE,IAAI,EAAC,OAAO;UAACC,GAAG,EAAC,GAAG;UAACd,GAAG,EAAC,IAAI;UAACjD,KAAK,EAAE0B,SAAU;UAACsC,QAAQ,EAAEhC;QAAsB;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENvE,OAAA;MAAK2E,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,KAAK;MAAAT,QAAA,GAE3B,CAAC,GAAGzC,KAAK,CAAC,CAAC,CAAC,CAACmD,IAAI,CAAC,CAAC,CAAC,CAAChB,GAAG,CAAErC,CAAC,IAC1B,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC,CAACmD,IAAI,CAAC,CAAC,CAAC,CAAChB,GAAG,CAAEhB,CAAC,iBACzB7C,OAAA;QAAAmE,QAAA,gBACEnE,OAAA;UACE8E,EAAE,EAAE,GAAI;UACRC,EAAE,EAAE,CAACvD,CAAC,GAAG,CAAC,IAAI,GAAI;UAClBwD,EAAE,EAAE,GAAI;UACRC,EAAE,EAAE,CAACpC,CAAC,GAAG,CAAC,IAAI,GAAI;UAClBqC,MAAM,EAAC,OAAO;UACdC,WAAW,EAAE/C,SAAU;UACvBgD,SAAS,EAAC;QAAiB;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACFvE,OAAA;UAAeQ,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE;UAACC,CAAC,EAAE,CAACe,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAACqB,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAACrB,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,EAAG;UAACmD,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAAAT,QAAA,eACxHnE,OAAA;YACEwE,IAAI,EAAC,QAAQ;YACba,KAAK,EAAE;cAAEV,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAO,CAAE;YACzClE,KAAK,EAAEW,oBAAoB,CAACwB,CAAC,CAAC,CAACrB,CAAC,CAAE;YAClCkD,QAAQ,EAAGnC,CAAC,IAAK+C,kBAAkB,CAAC/C,CAAC,EAAEM,CAAC,EAAErB,CAAC;UAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACW,CAAC;MAAA,GAjBV,gBAAgB/C,CAAC,IAAIqB,CAAC,EAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkB7B,CACJ,CACF,CAAC,EAGD,CAAC,GAAG7C,KAAK,CAAC,CAAC,CAAC,CAACmD,IAAI,CAAC,CAAC,CAAC,CAAChB,GAAG,CAAEC,KAAK,iBAC9B9D,OAAA;QAAAmE,QAAA,gBACEnE,OAAA;UACE8E,EAAE,EAAE,GAAI;UACRC,EAAE,EAAE,CAACjB,KAAK,GAAG,CAAC,IAAI,GAAI;UACtBkB,EAAE,EAAE,GAAI;UACRC,EAAE,EAAE,GAAI;UACRC,MAAM,EAAC,OAAO;UACdC,WAAW,EAAE/C,SAAU;UACvBgD,SAAS,EAAC;QAAiB;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACFvE,OAAA;UAAeQ,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAG;UAACC,CAAC,EAAE,CAACqD,KAAK,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAACA,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,EAAG;UAACa,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAAAT,QAAA,eACvHnE,OAAA;YAAOwE,IAAI,EAAC,QAAQ;YAACa,KAAK,EAAE;cAAEV,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAO;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA,GAZV,iBAAiBT,KAAK,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAa7B,CACJ,CAAC,EAGDgB,MAAM,CAACV,IAAI,CAAC7D,eAAe,CAAC,CAAC6C,GAAG,CAAC,CAAC2B,KAAK,EAAE1B,KAAK,kBAC7C9D,OAAA;QAAAmE,QAAA,gBACEnE,OAAA;UAAQyF,EAAE,EAAE,GAAI;UAACC,EAAE,EAAE,CAAC5B,KAAK,GAAG,CAAC,IAAI,GAAI;UAAC6B,CAAC,EAAEzD,QAAS;UAACP,IAAI,EAAC,OAAO;UAACiE,OAAO,EAAC;QAAM;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnFvE,OAAA;UAAMQ,CAAC,EAAE,GAAI;UAACC,CAAC,EAAE,CAACqD,KAAK,GAAG,CAAC,IAAI,GAAI;UAACnC,IAAI,EAAC,OAAO;UAACkE,UAAU,EAAC,QAAQ;UAACC,iBAAiB,EAAC,SAAS;UAAA3B,QAAA,EAAE,KAAKL,KAAK,GAAG,CAAC;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1HvE,OAAA;UAAMQ,CAAC,EAAE,GAAI;UAACC,CAAC,EAAE,CAACqD,KAAK,GAAG,CAAC,IAAI,GAAG,GAAG,EAAG;UAACnC,IAAI,EAAC,OAAO;UAACkE,UAAU,EAAC,QAAQ;UAACC,iBAAiB,EAAC,SAAS;UAAA3B,QAAA,EAAEnD,eAAe,CAACwE,KAAK;QAAC;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAH/HiB,KAAK;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACJ,CAAC,EAGDlE,WAAW,CAACwD,GAAG,CAAC,CAACkC,IAAI,EAAEjC,KAAK,kBAC3B9D,OAAA;QAAAmE,QAAA,gBACEnE,OAAA;UAAQyF,EAAE,EAAEM,IAAI,CAACvF,CAAC,GAAG,GAAI;UAACkF,EAAE,EAAEK,IAAI,CAACtF,CAAC,GAAG,GAAG,GAAG,GAAI;UAACkF,CAAC,EAAEzD,QAAS;UAACP,IAAI,EAAC,MAAM;UAACiE,OAAO,EAAC;QAAM;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5FvE,OAAA;UAAMQ,CAAC,EAAEuF,IAAI,CAACvF,CAAC,GAAG,GAAI;UAACC,CAAC,EAAEsF,IAAI,CAACtF,CAAC,GAAG,GAAG,GAAG,GAAI;UAACkB,IAAI,EAAC,OAAO;UAACkE,UAAU,EAAC,QAAQ;UAACC,iBAAiB,EAAC,SAAS;UAAA3B,QAAA,EAAE,KAAKL,KAAK,GAAG,CAAC;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpIvE,OAAA;UAAMQ,CAAC,EAAEuF,IAAI,CAACvF,CAAC,GAAG,GAAI;UAACC,CAAC,EAAEsF,IAAI,CAACtF,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAG;UAACkB,IAAI,EAAC,OAAO;UAACkE,UAAU,EAAC,QAAQ;UAACC,iBAAiB,EAAC,SAAS;UAAA3B,QAAA,EAAE4B,IAAI,CAACrF,KAAK,CAACsF,OAAO,CAAC,CAAC;QAAC;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAHxI,UAAUT,KAAK,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAItB,CACJ,CAAC,eAGFvE,OAAA;QAAAmE,QAAA,gBACEnE,OAAA;UAAQyF,EAAE,EAAE9E,UAAU,CAACH,CAAC,GAAG,EAAG;UAACkF,EAAE,EAAE/E,UAAU,CAACF,CAAC,GAAG,GAAI;UAACkF,CAAC,EAAEhF,UAAU,CAACI,IAAK;UAACY,IAAI,EAAEhB,UAAU,CAACG,KAAM;UAAC8E,OAAO,EAAC;QAAK;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnHvE,OAAA;UAAMQ,CAAC,EAAEG,UAAU,CAACH,CAAC,GAAG,EAAG;UAACC,CAAC,EAAEE,UAAU,CAACF,CAAC,GAAG,GAAI;UAACkB,IAAI,EAAC,OAAO;UAACkE,UAAU,EAAC,QAAQ;UAACC,iBAAiB,EAAC,SAAS;UAAA3B,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1HvE,OAAA;UAAMQ,CAAC,EAAEG,UAAU,CAACH,CAAC,GAAG,EAAG;UAACC,CAAC,EAAEE,UAAU,CAACF,CAAC,GAAG,GAAG,GAAG,EAAG;UAACkB,IAAI,EAAC,OAAO;UAACkE,UAAU,EAAC,QAAQ;UAACC,iBAAiB,EAAC,SAAS;UAAA3B,QAAA,EACjHnC,eAAe,CAACgE,OAAO,CAAC,CAAC;QAAC;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA,GALD,QAAQ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CAAC,eAEJvE,OAAA;QAAQO,EAAE,EAAC,WAAW;QAAC0F,WAAW,EAAC,GAAG;QAACC,YAAY,EAAC,GAAG;QAACC,IAAI,EAAC,GAAG;QAACC,IAAI,EAAC,GAAG;QAACC,MAAM,EAAC,MAAM;QAAC1E,IAAI,EAAC,OAAO;QAAAwC,QAAA,eAClGnE,OAAA;UAASsG,MAAM,EAAC;QAAgB;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENvE,OAAA;MAAKkE,SAAS,EAAC,SAAS;MAAAC,QAAA,GACrB,CAACrC,cAAc,iBAAI9B,OAAA;QAAQuG,OAAO,EAAExC,mBAAoB;QAAAI,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzFzC,cAAc,iBAAI9B,OAAA;QAAQuG,OAAO,EAAEvC,uBAAwB;QAAAG,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnE,EAAA,CA5MQH,aAAa;AAAAuG,EAAA,GAAbvG,aAAa;AA8MtB,eAAeA,aAAa;AAAC,IAAAuG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}