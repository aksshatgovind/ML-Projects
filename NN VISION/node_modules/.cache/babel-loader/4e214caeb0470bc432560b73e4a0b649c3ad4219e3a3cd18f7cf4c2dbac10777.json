{"ast":null,"code":"var _jsxFileName = \"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NeuralNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { calculateFinalActivation } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NeuralNetwork({\n  inputValues\n}) {\n  _s();\n  const [hiddenNodes, setHiddenNodes] = useState([{\n    id: 'hidden1',\n    x: 300,\n    y: 150\n  }, {\n    id: 'hidden2',\n    x: 300,\n    y: 250\n  }, {\n    id: 'hidden3',\n    x: 300,\n    y: 350\n  }, {\n    id: 'hidden4',\n    x: 300,\n    y: 450\n  }\n  // Default hidden nodes\n  ]);\n  const [outputNode, setOutputNode] = useState({\n    id: 'output',\n    x: 700,\n    y: 300,\n    activation: 0\n  }); // Output node\n  const [inputNodeValues, setInputNodeValues] = useState({\n    input1: 0,\n    input2: 0,\n    input3: 0\n    // Default input values\n  });\n  const [edges, setEdges] = useState(generateRandomEdges());\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputNodeValues(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  useEffect(() => {\n    // Update input values whenever inputValues prop changes\n    setInputNodeValues(inputValues);\n  }, [inputValues]);\n  useEffect(() => {\n    // Update output node activation whenever input node values change\n    const activation = calculateFinalActivation(inputNodeValues, hiddenNodes);\n    setOutputNode(prevState => ({\n      ...prevState,\n      activation\n    }));\n  }, [inputNodeValues, hiddenNodes]);\n  function generateRandomEdges() {\n    const edges = [];\n    const inputNodeIds = Object.keys(inputNodeValues);\n    for (let i = 0; i < hiddenNodes.length; i++) {\n      const target = hiddenNodes[i].id;\n      for (let j = 0; j < inputNodeIds.length; j++) {\n        const source = inputNodeIds[j];\n        const weight = Math.random() * 2 - 1; // Random weight between -1 and 1\n        edges.push({\n          source,\n          target,\n          weight\n        });\n      }\n    }\n    return edges;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NeuralNetwork\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"t\",\n      children: \"Perceptron\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"1200\",\n      height: \"800\",\n      children: [[...Array(3).keys()].map(i => [...Array(4).keys()].map(j => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: 130,\n          y1: (i + 1) * 210,\n          x2: 400,\n          y2: (j + 1) * 155,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          markerEnd: \"url(#arrowhead)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n          x: (100 + 300) / 2 - 10,\n          y: (i + 1) * 200 + ((j + 1) * 200 - (i + 1) * 200) / 2 - 10,\n          width: \"20\",\n          height: \"20\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: \"20px\",\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, `input-hidden-${i}-${j}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this))), [...Array(4).keys()].map(index => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: 300,\n          y1: (index + 1) * 200,\n          x2: 500,\n          y2: 400,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          markerEnd: \"url(#arrowhead)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n          x: (300 + 500) / 2 - 10,\n          y: (index + 1) * 200 + (400 - (index + 1) * 200) / 2 - 10,\n          width: \"20\",\n          height: \"20\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: \"20px\",\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this)]\n      }, `hidden-output-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)), [...Array(3).keys()].map(index => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 100,\n          cy: (index + 1) * 210,\n          r: \"30\",\n          fill: \"green\",\n          opacity: \"0.96\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 100,\n          y: (index + 1) * 210,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: `I ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this)]\n      }, `input-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)), [...Array(4).keys()].map(index => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 400,\n          cy: (index + 1) * 175,\n          r: \"30\",\n          fill: \"blue\",\n          opacity: \"0.96\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 400,\n          y: (index + 1) * 175,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: `H ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this)]\n      }, `hidden-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)), /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 650,\n          cy: 400,\n          r: \"30\",\n          fill: \"red\",\n          opacity: \"0.96\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 650,\n          y: 400,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: \"Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 5\n        }, this)]\n      }, `output`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"arrowhead\",\n        markerWidth: \"10\",\n        markerHeight: \"10\",\n        refX: \"8\",\n        refY: \"3\",\n        orient: \"auto\",\n        fill: \"black\",\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"0 0, 10 3, 0 6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(NeuralNetwork, \"q3SrHCvqiA5ZeQSpeZZw4zasIWA=\");\n_c = NeuralNetwork;\nexport default NeuralNetwork;\nvar _c;\n$RefreshReg$(_c, \"NeuralNetwork\");","map":{"version":3,"names":["React","useState","useEffect","calculateFinalActivation","jsxDEV","_jsxDEV","NeuralNetwork","inputValues","_s","hiddenNodes","setHiddenNodes","id","x","y","outputNode","setOutputNode","activation","inputNodeValues","setInputNodeValues","input1","input2","input3","edges","setEdges","generateRandomEdges","handleInputChange","e","name","value","target","prevState","inputNodeIds","Object","keys","i","length","j","source","weight","Math","random","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","Array","map","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","type","style","index","cx","cy","r","fill","opacity","textAnchor","alignmentBaseline","markerWidth","markerHeight","refX","refY","orient","points","_c","$RefreshReg$"],"sources":["/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NeuralNetwork.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { calculateFinalActivation } from '../utils';\n\nfunction NeuralNetwork({ inputValues }) {\n  const [hiddenNodes, setHiddenNodes] = useState([\n    { id: 'hidden1', x: 300, y: 150 },\n    { id: 'hidden2', x: 300, y: 250 },\n    { id: 'hidden3', x: 300, y: 350 },\n    { id: 'hidden4', x: 300, y: 450 },\n    // Default hidden nodes\n  ]);\n  const [outputNode, setOutputNode] = useState({ id: 'output', x: 700, y: 300, activation: 0 }); // Output node\n  const [inputNodeValues, setInputNodeValues] = useState({\n    input1: 0,\n    input2: 0,\n    input3: 0,\n    // Default input values\n  });\n  const [edges, setEdges] = useState(generateRandomEdges());\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setInputNodeValues(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  useEffect(() => {\n    // Update input values whenever inputValues prop changes\n    setInputNodeValues(inputValues);\n  }, [inputValues]);\n\n  useEffect(() => {\n    // Update output node activation whenever input node values change\n    const activation = calculateFinalActivation(inputNodeValues, hiddenNodes);\n    setOutputNode(prevState => ({ ...prevState, activation }));\n  }, [inputNodeValues, hiddenNodes]);\n\n  function generateRandomEdges() {\n    const edges = [];\n    const inputNodeIds = Object.keys(inputNodeValues);\n    for (let i = 0; i < hiddenNodes.length; i++) {\n      const target = hiddenNodes[i].id;\n      for (let j = 0; j < inputNodeIds.length; j++) {\n        const source = inputNodeIds[j];\n        const weight = Math.random() * 2 - 1; // Random weight between -1 and 1\n        edges.push({ source, target, weight });\n      }\n    }\n    return edges;\n  }\n\n  return (\n    <div className=\"NeuralNetwork\">\n      <div className=\"t\">Perceptron</div>\n      <svg width=\"1200\" height=\"800\">\n  {/* Render edges from input nodes to hidden nodes */}\n  {[...Array(3).keys()].map((i) => (\n    [...Array(4).keys()].map((j) => (\n      <g key={`input-hidden-${i}-${j}`}>\n        <line\n          x1={130}\n          y1={(i + 1) * 210}\n          x2={400}\n          y2={(j + 1) * 155}\n          stroke=\"black\"\n          strokeWidth=\"2\"\n          markerEnd=\"url(#arrowhead)\"\n        />\n        <foreignObject x={(100 + 300) / 2 - 10} y={(i + 1) * 200 + ((j + 1) * 200 - (i + 1) * 200) / 2 - 10} width=\"20\" height=\"20\">\n          <input type=\"number\" style={{ width: \"20px\", height: \"20px\" }} />\n        </foreignObject>\n      </g>\n    ))\n  ))}\n\n  {/* Render edges from hidden nodes to output node */}\n  {[...Array(4).keys()].map((index) => (\n    <g key={`hidden-output-${index}`}>\n      <line\n        x1={300}\n        y1={(index + 1) * 200}\n        x2={500}\n        y2={400}\n        stroke=\"black\"\n        strokeWidth=\"2\"\n        markerEnd=\"url(#arrowhead)\"\n      />\n      <foreignObject x={(300 + 500) / 2 - 10} y={(index + 1) * 200 + (400 - (index + 1) * 200) / 2 - 10} width=\"20\" height=\"20\">\n        <input type=\"number\" style={{ width: \"20px\", height: \"20px\" }} />\n      </foreignObject>\n    </g>\n  ))}\n\n  {/* Render input nodes */}\n  {[...Array(3).keys()].map((index) => (\n    <g key={`input-${index}`}>\n      <circle cx={100} cy={(index + 1) * 210} r=\"30\" fill=\"green\" opacity=\"0.96\"/>\n      <text x={100} y={(index + 1) * 210} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">{`I ${index + 1}`}</text>\n    </g>\n  ))}\n\n  {/* Render hidden nodes */}\n  {[...Array(4).keys()].map((index) => (\n    <g key={`hidden-${index}`}>\n      <circle cx={400} cy={(index + 1) * 175} r=\"30\" fill=\"blue\" opacity=\"0.96\"/>\n      <text x={400} y={(index + 1) * 175} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">{`H ${index + 1}`}</text>\n    </g>\n  ))}\n\n  {/* Render output node */}\n  <g key={`output`}>\n    <circle cx={650} cy={400} r=\"30\" fill=\"red\" opacity=\"0.96\"/>\n    <text x={650} y={400} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">Out</text>\n  </g>\n\n  {/* Arrowhead marker */}\n  <marker\n    id=\"arrowhead\"\n    markerWidth=\"10\"\n    markerHeight=\"10\"\n    refX=\"8\"\n    refY=\"3\"\n    orient=\"auto\"\n    fill=\"black\"\n  >\n    <polygon points=\"0 0, 10 3, 0 6\" />\n  </marker>\n</svg>\n\n    </div>\n  );\n}\n\nexport default NeuralNetwork;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}