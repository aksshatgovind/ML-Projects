{"ast":null,"code":"var _jsxFileName = \"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/PerceptronSVG.js\",\n  _s = $RefreshSig$();\n// src/components/PerceptronSVG.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerceptronSVG() {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: 'input1',\n    x: 100,\n    y: 100,\n    isDraggable: false\n  }, {\n    id: 'input2',\n    x: 100,\n    y: 150,\n    isDraggable: false\n  }, {\n    id: 'input3',\n    x: 100,\n    y: 200,\n    isDraggable: false\n  }, {\n    id: 'hidden1',\n    x: 300,\n    y: 100,\n    isDraggable: false\n  }, {\n    id: 'hidden2',\n    x: 300,\n    y: 150,\n    isDraggable: false\n  }, {\n    id: 'hidden3',\n    x: 300,\n    y: 200,\n    isDraggable: false\n  }, {\n    id: 'output',\n    x: 500,\n    y: 150,\n    isDraggable: false\n  }]);\n  const [edges, setEdges] = useState([{\n    source: 'input1',\n    target: 'hidden1'\n  }, {\n    source: 'input1',\n    target: 'hidden2'\n  }, {\n    source: 'input1',\n    target: 'hidden3'\n  }, {\n    source: 'input2',\n    target: 'hidden1'\n  }, {\n    source: 'input2',\n    target: 'hidden2'\n  }, {\n    source: 'input2',\n    target: 'hidden3'\n  }, {\n    source: 'input3',\n    target: 'hidden1'\n  }, {\n    source: 'input3',\n    target: 'hidden2'\n  }, {\n    source: 'input3',\n    target: 'hidden3'\n  }, {\n    source: 'hidden1',\n    target: 'output'\n  }, {\n    source: 'hidden2',\n    target: 'output'\n  }, {\n    source: 'hidden3',\n    target: 'output'\n  }]);\n  const [draggingNode, setDraggingNode] = useState(null);\n  const handleNodeClick = id => {\n    const updatedNodes = nodes.map(node => node.id === id ? {\n      ...node,\n      isDraggable: !node.isDraggable\n    } : node);\n    setNodes(updatedNodes);\n    setDraggingNode(null); // Reset dragging node\n  };\n  const handleMouseDown = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    if (nodes[index].isDraggable) {\n      setDraggingNode(id); // Set dragging node\n    }\n  };\n  const handleMouseMove = e => {\n    if (draggingNode) {\n      const index = nodes.findIndex(node => node.id === draggingNode);\n      const newX = e.clientX - e.target.getBoundingClientRect().left;\n      const newY = e.clientY - e.target.getBoundingClientRect().top;\n      const updatedNodes = [...nodes];\n      updatedNodes[index] = {\n        ...updatedNodes[index],\n        x: newX,\n        y: newY\n      };\n      setNodes(updatedNodes);\n    }\n  };\n  const handleMouseUp = () => {\n    setDraggingNode(null); // Reset dragging node\n  };\n  useEffect(() => {\n    const updatedEdges = edges.map(edge => {\n      const sourceNode = nodes.find(node => node.id === edge.source);\n      const targetNode = nodes.find(node => node.id === edge.target);\n      return {\n        ...edge,\n        sourceX: sourceNode.x,\n        sourceY: sourceNode.y,\n        targetX: targetNode.x,\n        targetY: targetNode.y\n      };\n    });\n    setEdges(updatedEdges);\n  }, [nodes, edges]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"800\",\n    height: \"400\",\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    children: [edges.map(edge => /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: edge.sourceX,\n      y1: edge.sourceY,\n      x2: edge.targetX,\n      y2: edge.targetY,\n      stroke: \"#000000\",\n      strokeWidth: \"2\"\n    }, `${edge.source}-${edge.target}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)), nodes.map(node => /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: node.x,\n      cy: node.y,\n      r: \"15\",\n      fill: \"#ffffff\",\n      stroke: \"#000000\",\n      strokeWidth: \"2\",\n      onClick: () => handleNodeClick(node.id),\n      onMouseDown: e => handleMouseDown(e, node.id),\n      style: {\n        cursor: node.isDraggable ? 'pointer' : 'move'\n      }\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(PerceptronSVG, \"D5MnH9fj6SR17Jr/K1hZh687osI=\");\n_c = PerceptronSVG;\nexport default PerceptronSVG;\nvar _c;\n$RefreshReg$(_c, \"PerceptronSVG\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PerceptronSVG","_s","nodes","setNodes","id","x","y","isDraggable","edges","setEdges","source","target","draggingNode","setDraggingNode","handleNodeClick","updatedNodes","map","node","handleMouseDown","e","index","findIndex","handleMouseMove","newX","clientX","getBoundingClientRect","left","newY","clientY","top","handleMouseUp","updatedEdges","edge","sourceNode","find","targetNode","sourceX","sourceY","targetX","targetY","width","height","onMouseMove","onMouseUp","children","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","fill","onClick","onMouseDown","style","cursor","_c","$RefreshReg$"],"sources":["/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/PerceptronSVG.js"],"sourcesContent":["// src/components/PerceptronSVG.js\nimport React, { useState, useEffect } from 'react';\n\nfunction PerceptronSVG() {\n  const [nodes, setNodes] = useState([\n    { id: 'input1', x: 100, y: 100, isDraggable: false },\n    { id: 'input2', x: 100, y: 150, isDraggable: false },\n    { id: 'input3', x: 100, y: 200, isDraggable: false },\n    { id: 'hidden1', x: 300, y: 100, isDraggable: false },\n    { id: 'hidden2', x: 300, y: 150, isDraggable: false },\n    { id: 'hidden3', x: 300, y: 200, isDraggable: false },\n    { id: 'output', x: 500, y: 150, isDraggable: false },\n  ]);\n\n  const [edges, setEdges] = useState([\n    { source: 'input1', target: 'hidden1' },\n    { source: 'input1', target: 'hidden2' },\n    { source: 'input1', target: 'hidden3' },\n    { source: 'input2', target: 'hidden1' },\n    { source: 'input2', target: 'hidden2' },\n    { source: 'input2', target: 'hidden3' },\n    { source: 'input3', target: 'hidden1' },\n    { source: 'input3', target: 'hidden2' },\n    { source: 'input3', target: 'hidden3' },\n    { source: 'hidden1', target: 'output' },\n    { source: 'hidden2', target: 'output' },\n    { source: 'hidden3', target: 'output' },\n  ]);\n\n  const [draggingNode, setDraggingNode] = useState(null);\n\n  const handleNodeClick = (id) => {\n    const updatedNodes = nodes.map(node =>\n      node.id === id ? { ...node, isDraggable: !node.isDraggable } : node\n    );\n    setNodes(updatedNodes);\n    setDraggingNode(null); // Reset dragging node\n  };\n\n  const handleMouseDown = (e, id) => {\n    const index = nodes.findIndex(node => node.id === id);\n    if (nodes[index].isDraggable) {\n      setDraggingNode(id); // Set dragging node\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (draggingNode) {\n      const index = nodes.findIndex(node => node.id === draggingNode);\n      const newX = e.clientX - e.target.getBoundingClientRect().left;\n      const newY = e.clientY - e.target.getBoundingClientRect().top;\n      const updatedNodes = [...nodes];\n      updatedNodes[index] = { ...updatedNodes[index], x: newX, y: newY };\n      setNodes(updatedNodes);\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDraggingNode(null); // Reset dragging node\n  };\n\n  useEffect(() => {\n    const updatedEdges = edges.map(edge => {\n      const sourceNode = nodes.find(node => node.id === edge.source);\n      const targetNode = nodes.find(node => node.id === edge.target);\n      return {\n        ...edge,\n        sourceX: sourceNode.x,\n        sourceY: sourceNode.y,\n        targetX: targetNode.x,\n        targetY: targetNode.y,\n      };\n    });\n    setEdges(updatedEdges);\n  }, [nodes, edges]);\n\n  return (\n    <svg\n      width=\"800\"\n      height=\"400\"\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n    >\n      {edges.map(edge => (\n        <line\n          key={`${edge.source}-${edge.target}`}\n          x1={edge.sourceX}\n          y1={edge.sourceY}\n          x2={edge.targetX}\n          y2={edge.targetY}\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n        />\n      ))}\n      {nodes.map(node => (\n        <circle\n          key={node.id}\n          cx={node.x}\n          cy={node.y}\n          r=\"15\"\n          fill=\"#ffffff\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          onClick={() => handleNodeClick(node.id)}\n          onMouseDown={(e) => handleMouseDown(e, node.id)}\n          style={{ cursor: node.isDraggable ? 'pointer' : 'move' }}\n        />\n      ))}\n    </svg>\n  );\n}\n\nexport default PerceptronSVG;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}