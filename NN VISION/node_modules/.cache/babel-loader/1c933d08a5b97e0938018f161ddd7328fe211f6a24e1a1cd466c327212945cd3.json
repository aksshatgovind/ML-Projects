{"ast":null,"code":"var _jsxFileName = \"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NeuralNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NeuralNetwork() {\n  _s();\n  const [inputNodeValues, setInputNodeValues] = useState({\n    input1: 0,\n    input2: 0,\n    input3: 0\n  });\n  const [hiddenNodes] = useState([{\n    id: 'hidden1',\n    x: 300,\n    y: 150,\n    value: 0\n  }, {\n    id: 'hidden2',\n    x: 300,\n    y: 250,\n    value: 0\n  }, {\n    id: 'hidden3',\n    x: 300,\n    y: 350,\n    value: 0\n  }, {\n    id: 'hidden4',\n    x: 300,\n    y: 450,\n    value: 0\n  }]);\n  useEffect(() => {\n    // Initialize input values\n    setInputNodeValues({\n      input1: 0,\n      input2: 0,\n      input3: 0\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NeuralNetwork\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"t\",\n      children: \"Perceptron\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"1200\",\n      height: \"800\",\n      children: [Object.keys(inputNodeValues).map((input, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 100,\n          cy: (index + 1) * 210,\n          r: \"30\",\n          fill: \"green\",\n          opacity: \"0.96\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 100,\n          y: (index + 1) * 210,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: `I ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 100,\n          y: (index + 1) * 210 + 50,\n          fill: \"black\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: inputNodeValues[input]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, input, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)), hiddenNodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: node.x,\n          cy: node.y,\n          r: \"30\",\n          fill: \"blue\",\n          opacity: \"0.96\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: node.x,\n          y: node.y,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: `H ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: node.x,\n          y: node.y + 40,\n          fill: \"black\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: node.value.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, `hidden-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 700,\n          cy: 300,\n          r: \"30\",\n          fill: \"red\",\n          opacity: \"0.96\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 700,\n          y: 300,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: \"Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, `output`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(NeuralNetwork, \"d9y4xLPVC+7GEv+4Zo7Hqmq+8sk=\");\n_c = NeuralNetwork;\nexport default NeuralNetwork;\nvar _c;\n$RefreshReg$(_c, \"NeuralNetwork\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NeuralNetwork","_s","inputNodeValues","setInputNodeValues","input1","input2","input3","hiddenNodes","id","x","y","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","Object","keys","map","input","index","cx","cy","r","fill","opacity","textAnchor","alignmentBaseline","node","toFixed","_c","$RefreshReg$"],"sources":["/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NeuralNetwork.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction NeuralNetwork() {\n  const [inputNodeValues, setInputNodeValues] = useState({\n    input1: 0,\n    input2: 0,\n    input3: 0,\n  });\n\n  const [hiddenNodes] = useState([\n    { id: 'hidden1', x: 300, y: 150, value: 0 },\n    { id: 'hidden2', x: 300, y: 250, value: 0 },\n    { id: 'hidden3', x: 300, y: 350, value: 0 },\n    { id: 'hidden4', x: 300, y: 450, value: 0 },\n  ]);\n\n  useEffect(() => {\n    // Initialize input values\n    setInputNodeValues({ input1: 0, input2: 0, input3: 0 });\n  }, []);\n\n  return (\n    <div className=\"NeuralNetwork\">\n      <div className=\"t\">Perceptron</div>\n      <svg width=\"1200\" height=\"800\">\n        {/* Render input nodes */}\n        {Object.keys(inputNodeValues).map((input, index) => (\n          <g key={input}>\n            <circle cx={100} cy={(index + 1) * 210} r=\"30\" fill=\"green\" opacity=\"0.96\"/>\n            <text x={100} y={(index + 1) * 210} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">{`I ${index + 1}`}</text>\n            {/* Display input value dynamically */}\n            <text x={100} y={(index + 1) * 210 + 50} fill=\"black\" textAnchor=\"middle\" alignmentBaseline=\"central\">{inputNodeValues[input]}</text>\n          </g>\n        ))}\n\n        {/* Render hidden nodes */}\n        {hiddenNodes.map((node, index) => (\n          <g key={`hidden-${index}`}>\n            <circle cx={node.x} cy={node.y} r=\"30\" fill=\"blue\" opacity=\"0.96\"/>\n            <text x={node.x} y={node.y} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">{`H ${index + 1}`}</text>\n            {/* Display hidden node value dynamically */}\n            <text x={node.x} y={node.y + 40} fill=\"black\" textAnchor=\"middle\" alignmentBaseline=\"central\">{node.value.toFixed(2)}</text>\n          </g>\n        ))}\n\n        {/* Render output node */}\n        <g key={`output`}>\n          <circle cx={700} cy={300} r=\"30\" fill=\"red\" opacity=\"0.96\"/>\n          <text x={700} y={300} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">Out</text>\n        </g>\n      </svg>\n    </div>\n  );\n}\n\nexport default NeuralNetwork;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}