{"ast":null,"code":"var _jsxFileName = \"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NeuralNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { calculateFinalActivation } from '../utils'; // Adjust the path based on the location of utils.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NeuralNetwork({\n  inputValues,\n  architecture = 'FCNN'\n}) {\n  _s();\n  const [hiddenNodes, setHiddenNodes] = useState([{\n    id: 'hidden1',\n    x: 300,\n    y: 150,\n    value: 0\n  }, {\n    id: 'hidden2',\n    x: 300,\n    y: 250,\n    value: 0\n  }, {\n    id: 'hidden3',\n    x: 300,\n    y: 350,\n    value: 0\n  }, {\n    id: 'hidden4',\n    x: 300,\n    y: 450,\n    value: 0\n  }]);\n  const [outputNode, setOutputNode] = useState({\n    id: 'output',\n    x: 700,\n    y: 300,\n    activation: 0,\n    color: 'red',\n    size: 30\n  });\n  const [inputNodeValues, setInputNodeValues] = useState({\n    input1: 0,\n    input2: 0,\n    input3: 0\n  });\n  const [inputToHiddenWeights, setInputToHiddenWeights] = useState(() => {\n    const weights = [];\n    for (let i = 0; i < 4; i++) {\n      weights.push(Array(3).fill(0));\n    }\n    return weights;\n  });\n  const [hiddenToOutputWeights, setHiddenToOutputWeights] = useState([0.5, 0.4, -0.2, 0.1]); // Example weights\n\n  const [edges, setEdges] = useState([]);\n  const [inputsComplete, setInputsComplete] = useState(false);\n  const [outputNodeValue, setOutputNodeValue] = useState(0);\n\n  // Customization for nodes and edges\n  const [nodeSize, setNodeSize] = useState(30);\n  const [edgeWidth, setEdgeWidth] = useState(2);\n\n  // Handle node size change\n  const handleNodeSizeChange = e => {\n    setNodeSize(parseFloat(e.target.value));\n  };\n\n  // Handle edge width change\n  const handleEdgeWidthChange = e => {\n    setEdgeWidth(parseFloat(e.target.value));\n  };\n  const handleWeightChange = (e, j, i) => {\n    const newWeight = parseFloat(e.target.value);\n    setInputToHiddenWeights(prevWeights => {\n      const updatedWeights = [...prevWeights];\n      updatedWeights[j][i] = newWeight;\n      return updatedWeights;\n    });\n  };\n\n  // Generates edges between input and hidden nodes based on weights\n  const generateRandomEdges = () => {\n    const edges = [];\n    for (let i = 0; i < hiddenNodes.length; i++) {\n      const target = hiddenNodes[i].id;\n      for (let j = 0; j < 3; j++) {\n        const source = `input${j + 1}`;\n        const weight = inputToHiddenWeights[i][j];\n        edges.push({\n          source,\n          target,\n          weight\n        });\n      }\n    }\n    return edges;\n  };\n  const calculateHiddenNodeValue = (hiddenNode, inputNodeValues, edges) => {\n    const value = edges.filter(edge => edge.target === hiddenNode.id).reduce((acc, edge) => {\n      const inputValue = inputNodeValues[edge.source];\n      const weight = edge.weight;\n      return acc + inputValue * weight;\n    }, 0);\n    return Math.max(0, value); // ReLU activation\n  };\n  const calculateOutputNodeValue = () => {\n    const outputValue = calculateFinalActivation(inputNodeValues, hiddenNodes);\n    return outputValue;\n  };\n  useEffect(() => {\n    setInputNodeValues(inputValues);\n  }, [inputValues]);\n  useEffect(() => {\n    if (inputsComplete) {\n      const updatedHiddenNodes = hiddenNodes.map((hiddenNode, index) => {\n        const value = calculateHiddenNodeValue(hiddenNode, inputNodeValues, edges);\n        return {\n          ...hiddenNode,\n          value\n        };\n      });\n      setHiddenNodes(updatedHiddenNodes);\n    }\n  }, [inputNodeValues, inputsComplete, edges, hiddenNodes]);\n  useEffect(() => {\n    setEdges(generateRandomEdges());\n  }, [inputNodeValues, hiddenNodes, inputToHiddenWeights]);\n  const handleInputComplete = () => {\n    setInputsComplete(true);\n  };\n  const handleOutputCalculation = () => {\n    const outputValue = calculateFinalActivation(inputNodeValues, hiddenNodes);\n    setOutputNodeValue(outputValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NeuralNetwork\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"t\",\n      children: \"NN VISION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Node Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"50\",\n          value: nodeSize,\n          onChange: handleNodeSizeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Edge Width:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: edgeWidth,\n          onChange: handleEdgeWidthChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"1200\",\n      height: \"800\",\n      children: [[...Array(3).keys()].map(i => [...Array(4).keys()].map(j => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: 130,\n          y1: (i + 1) * 210,\n          x2: 370,\n          y2: (j + 1) * 175,\n          stroke: \"black\",\n          strokeWidth: edgeWidth,\n          markerEnd: \"url(#arrowhead)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n          x: (130 + 350) / 2 - 1,\n          y: (i + 1) * 185 + ((j + 1) * 210 - (i + 1) * 210) / 2 - 10,\n          width: \"20\",\n          height: \"20\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: \"30px\",\n              height: \"20px\"\n            },\n            value: inputToHiddenWeights[j][i],\n            onChange: e => handleWeightChange(e, j, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)]\n      }, `input-hidden-${i}-${j}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this))), [...Array(4).keys()].map(index => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: 429,\n          y1: (index + 1) * 176,\n          x2: 619,\n          y2: 400,\n          stroke: \"black\",\n          strokeWidth: edgeWidth,\n          markerEnd: \"url(#arrowhead)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n          x: (400 + 650) / 2 - 10,\n          y: (index + 1) * 190 + (410 - (index + 1) * 210) / 2 - 10,\n          width: \"20\",\n          height: \"20\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: {\n              width: \"30px\",\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, `hidden-output-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)), Object.keys(inputNodeValues).map((input, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 100,\n          cy: (index + 1) * 210,\n          r: nodeSize,\n          fill: \"green\",\n          opacity: \"0.66\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 100,\n          y: (index + 1) * 210,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: `I ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 100,\n          y: (index + 1) * 210 + 50,\n          fill: \"black\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: inputNodeValues[input]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, input, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)), hiddenNodes.map((hiddenNode, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 400,\n          cy: (index + 1) * 175,\n          r: nodeSize,\n          fill: \"blue\",\n          opacity: \"0.66\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 400,\n          y: (index + 1) * 175,\n          fill: \"white\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: `H${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 400,\n          y: (index + 1) * 175 + 50,\n          fill: \"black\",\n          textAnchor: \"middle\",\n          alignmentBaseline: \"central\",\n          children: hiddenNode.value.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, hiddenNode.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: 620,\n        cy: 400,\n        r: nodeSize,\n        fill: outputNode.color,\n        opacity: \"0.66\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: 620,\n        y: 400,\n        fill: \"white\",\n        textAnchor: \"middle\",\n        alignmentBaseline: \"central\",\n        children: \"O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: 620,\n        y: 450,\n        fill: \"black\",\n        textAnchor: \"middle\",\n        alignmentBaseline: \"central\",\n        children: outputNodeValue.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInputComplete,\n      className: \"set\",\n      children: \"Set Input Weights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOutputCalculation,\n      className: \"calc\",\n      children: \"Calculate Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(NeuralNetwork, \"gxtknU7uUqMkFPsCV5CUQsL8Fl4=\");\n_c = NeuralNetwork;\nexport default NeuralNetwork;\nvar _c;\n$RefreshReg$(_c, \"NeuralNetwork\");","map":{"version":3,"names":["React","useState","useEffect","calculateFinalActivation","jsxDEV","_jsxDEV","NeuralNetwork","inputValues","architecture","_s","hiddenNodes","setHiddenNodes","id","x","y","value","outputNode","setOutputNode","activation","color","size","inputNodeValues","setInputNodeValues","input1","input2","input3","inputToHiddenWeights","setInputToHiddenWeights","weights","i","push","Array","fill","hiddenToOutputWeights","setHiddenToOutputWeights","edges","setEdges","inputsComplete","setInputsComplete","outputNodeValue","setOutputNodeValue","nodeSize","setNodeSize","edgeWidth","setEdgeWidth","handleNodeSizeChange","e","parseFloat","target","handleEdgeWidthChange","handleWeightChange","j","newWeight","prevWeights","updatedWeights","generateRandomEdges","length","source","weight","calculateHiddenNodeValue","hiddenNode","filter","edge","reduce","acc","inputValue","Math","max","calculateOutputNodeValue","outputValue","updatedHiddenNodes","map","index","handleInputComplete","handleOutputCalculation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","onChange","width","height","keys","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","style","Object","input","cx","cy","r","opacity","textAnchor","alignmentBaseline","toFixed","onClick","_c","$RefreshReg$"],"sources":["/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NeuralNetwork.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { calculateFinalActivation } from '../utils'; // Adjust the path based on the location of utils.js\n\n\n\nfunction NeuralNetwork({ inputValues, architecture = 'FCNN' }) {\n  const [hiddenNodes, setHiddenNodes] = useState([\n    { id: 'hidden1', x: 300, y: 150, value: 0 },\n    { id: 'hidden2', x: 300, y: 250, value: 0 },\n    { id: 'hidden3', x: 300, y: 350, value: 0 },\n    { id: 'hidden4', x: 300, y: 450, value: 0 },\n  ]);\n\n  const [outputNode, setOutputNode] = useState({\n    id: 'output',\n    x: 700,\n    y: 300,\n    activation: 0,\n    color: 'red',\n    size: 30,\n  });\n\n  const [inputNodeValues, setInputNodeValues] = useState({\n    input1: 0,\n    input2: 0,\n    input3: 0,\n  });\n\n  const [inputToHiddenWeights, setInputToHiddenWeights] = useState(() => {\n    const weights = [];\n    for (let i = 0; i < 4; i++) {\n      weights.push(Array(3).fill(0)); \n    }\n    return weights;\n  });\n\n  const [hiddenToOutputWeights, setHiddenToOutputWeights] = useState([0.5, 0.4, -0.2, 0.1]);  // Example weights\n\n  const [edges, setEdges] = useState([]);\n  const [inputsComplete, setInputsComplete] = useState(false);\n  const [outputNodeValue, setOutputNodeValue] = useState(0);\n\n  // Customization for nodes and edges\n  const [nodeSize, setNodeSize] = useState(30);\n  const [edgeWidth, setEdgeWidth] = useState(2);\n\n  // Handle node size change\n  const handleNodeSizeChange = (e) => {\n    setNodeSize(parseFloat(e.target.value));\n  };\n\n  // Handle edge width change\n  const handleEdgeWidthChange = (e) => {\n    setEdgeWidth(parseFloat(e.target.value));\n  };\n\n  const handleWeightChange = (e, j, i) => {\n    const newWeight = parseFloat(e.target.value);\n    setInputToHiddenWeights(prevWeights => {\n      const updatedWeights = [...prevWeights];\n      updatedWeights[j][i] = newWeight;\n      return updatedWeights;\n    });\n  };\n\n  // Generates edges between input and hidden nodes based on weights\n  const generateRandomEdges = () => {\n    const edges = [];\n    for (let i = 0; i < hiddenNodes.length; i++) {\n      const target = hiddenNodes[i].id;\n      for (let j = 0; j < 3; j++) {\n        const source = `input${j + 1}`;\n        const weight = inputToHiddenWeights[i][j]; \n        edges.push({ source, target, weight });\n      }\n    }\n    return edges;\n  };\n\n  const calculateHiddenNodeValue = (hiddenNode, inputNodeValues, edges) => {\n    const value = edges\n      .filter(edge => edge.target === hiddenNode.id)\n      .reduce((acc, edge) => {\n        const inputValue = inputNodeValues[edge.source];\n        const weight = edge.weight;\n        return acc + inputValue * weight;\n      }, 0);\n    return Math.max(0, value); // ReLU activation\n  };\n\n  const calculateOutputNodeValue = () => {\n    const outputValue = calculateFinalActivation(inputNodeValues, hiddenNodes);\n    return outputValue;\n  };\n\n  useEffect(() => {\n    setInputNodeValues(inputValues);\n  }, [inputValues]);\n\n  useEffect(() => {\n    if (inputsComplete) {\n      const updatedHiddenNodes = hiddenNodes.map((hiddenNode, index) => {\n        const value = calculateHiddenNodeValue(hiddenNode, inputNodeValues, edges);\n        return { ...hiddenNode, value };\n      });\n      setHiddenNodes(updatedHiddenNodes);\n    }\n  }, [inputNodeValues, inputsComplete, edges, hiddenNodes]);\n\n  useEffect(() => {\n    setEdges(generateRandomEdges());\n  }, [inputNodeValues, hiddenNodes, inputToHiddenWeights]);\n\n  const handleInputComplete = () => {\n    setInputsComplete(true);\n  };\n\n  const handleOutputCalculation = () => {\n    const outputValue = calculateFinalActivation(inputNodeValues, hiddenNodes);\n    setOutputNodeValue(outputValue);\n  };\n\n  return (\n    <div className=\"NeuralNetwork\">\n      <div className=\"t\">NN VISION</div>\n\n      {/* Node and Edge Customization Section */}\n      <div className=\"controls\">\n        <label>\n          Node Size:\n          <input type=\"range\" min=\"10\" max=\"50\" value={nodeSize} onChange={handleNodeSizeChange} />\n        </label>\n        <label>\n          Edge Width:\n          <input type=\"range\" min=\"1\" max=\"10\" value={edgeWidth} onChange={handleEdgeWidthChange} />\n        </label>\n      </div>\n\n      <svg width=\"1200\" height=\"800\">\n        {/* Drawing Input to Hidden connections */}\n        {[...Array(3).keys()].map((i) => (\n          [...Array(4).keys()].map((j) => (\n            <g key={`input-hidden-${i}-${j}`}>\n              <line\n                x1={130}\n                y1={(i + 1) * 210}\n                x2={370}\n                y2={(j + 1) * 175}\n                stroke=\"black\"\n                strokeWidth={edgeWidth}\n                markerEnd=\"url(#arrowhead)\"\n              />\n              <foreignObject x={(130 + 350) / 2 - 1} y={(i + 1) * 185 + ((j + 1) * 210 - (i + 1) * 210) / 2 - 10} width=\"20\" height=\"20\">\n                <input\n                  type=\"number\"\n                  style={{ width: \"30px\", height: \"20px\" }}\n                  value={inputToHiddenWeights[j][i]} \n                  onChange={(e) => handleWeightChange(e, j, i)} \n                />\n              </foreignObject>\n            </g>\n          ))\n        ))}\n\n        {/* Drawing Hidden to Output connections */}\n        {[...Array(4).keys()].map((index) => (\n          <g key={`hidden-output-${index}`}>\n            <line\n              x1={429}\n              y1={(index + 1) * 176}\n              x2={619}\n              y2={400}\n              stroke=\"black\"\n              strokeWidth={edgeWidth}\n              markerEnd=\"url(#arrowhead)\"\n            />\n            <foreignObject x={(400 + 650) / 2 - 10} y={(index + 1) * 190 + (410 - (index + 1) * 210) / 2 - 10} width=\"20\" height=\"20\">\n              <input type=\"number\" style={{ width: \"30px\", height: \"20px\" }} />\n            </foreignObject>\n          </g>\n        ))}\n\n        {/* Drawing Input Nodes */}\n        {Object.keys(inputNodeValues).map((input, index) => (\n          <g key={input}>\n            <circle cx={100} cy={(index + 1) * 210} r={nodeSize} fill=\"green\" opacity=\"0.66\" />\n            <text x={100} y={(index + 1) * 210} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">{`I ${index + 1}`}</text>\n            <text x={100} y={(index + 1) * 210 + 50} fill=\"black\" textAnchor=\"middle\" alignmentBaseline=\"central\">{inputNodeValues[input]}</text>\n          </g>\n        ))}\n\n        {/* Drawing Hidden Nodes */}\n        {hiddenNodes.map((hiddenNode, index) => (\n          <g key={hiddenNode.id}>\n            <circle cx={400} cy={(index + 1) * 175} r={nodeSize} fill=\"blue\" opacity=\"0.66\" />\n            <text x={400} y={(index + 1) * 175} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">{`H${index + 1}`}</text>\n            <text x={400} y={(index + 1) * 175 + 50} fill=\"black\" textAnchor=\"middle\" alignmentBaseline=\"central\">{hiddenNode.value.toFixed(2)}</text>\n          </g>\n        ))}\n\n        {/* Drawing Output Node */}\n        <circle cx={620} cy={400} r={nodeSize} fill={outputNode.color} opacity=\"0.66\" />\n        <text x={620} y={400} fill=\"white\" textAnchor=\"middle\" alignmentBaseline=\"central\">O</text>\n        <text x={620} y={450} fill=\"black\" textAnchor=\"middle\" alignmentBaseline=\"central\">{outputNodeValue.toFixed(2)}</text>\n      </svg>\n\n      <button onClick={handleInputComplete} className=\"set\">Set Input Weights</button>\n      <button onClick={handleOutputCalculation} className=\"calc\">Calculate Output</button>\n    </div>\n  );\n}\n\nexport default NeuralNetwork;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}