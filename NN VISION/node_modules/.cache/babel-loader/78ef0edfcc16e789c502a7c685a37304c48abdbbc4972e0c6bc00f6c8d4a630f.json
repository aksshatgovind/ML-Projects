{"ast":null,"code":"var _jsxFileName = \"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NN.js\";\nimport React from 'react';\nimport Layer from './Layer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NeuralNetwork() {\n  // Your neural network structure and data here\n  const layers = [{\n    neurons: 2,\n    activation: 'sigmoid'\n  }, {\n    neurons: 3,\n    activation: 'relu'\n  }, {\n    neurons: 1,\n    activation: 'tanh'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"neural-network\",\n    children: layers.map((layer, index) => /*#__PURE__*/_jsxDEV(Layer, {\n      neurons: layer.neurons,\n      activation: layer.activation\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = NeuralNetwork;\nexport default NeuralNetwork;\nvar _c;\n$RefreshReg$(_c, \"NeuralNetwork\");","map":{"version":3,"names":["React","Layer","jsxDEV","_jsxDEV","NeuralNetwork","layers","neurons","activation","className","children","map","layer","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/NN VISION/src/components/NN.js"],"sourcesContent":["import React from 'react';\nimport Layer from './Layer';\n\nfunction NeuralNetwork() {\n  // Your neural network structure and data here\n  const layers = [\n    { neurons: 2, activation: 'sigmoid' },\n    { neurons: 3, activation: 'relu' },\n    { neurons: 1, activation: 'tanh' }\n  ];\n\n  return (\n    <div className=\"neural-network\">\n      {layers.map((layer, index) => (\n        <Layer key={index} neurons={layer.neurons} activation={layer.activation} />\n      ))}\n    </div>\n  );\n}\n\nexport default NeuralNetwork;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,aAAaA,CAAA,EAAG;EACvB;EACA,MAAMC,MAAM,GAAG,CACb;IAAEC,OAAO,EAAE,CAAC;IAAEC,UAAU,EAAE;EAAU,CAAC,EACrC;IAAED,OAAO,EAAE,CAAC;IAAEC,UAAU,EAAE;EAAO,CAAC,EAClC;IAAED,OAAO,EAAE,CAAC;IAAEC,UAAU,EAAE;EAAO,CAAC,CACnC;EAED,oBACEJ,OAAA;IAAKK,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BJ,MAAM,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBT,OAAA,CAACF,KAAK;MAAaK,OAAO,EAAEK,KAAK,CAACL,OAAQ;MAACC,UAAU,EAAEI,KAAK,CAACJ;IAAW,GAA5DK,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyD,CAC3E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAfQb,aAAa;AAiBtB,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}