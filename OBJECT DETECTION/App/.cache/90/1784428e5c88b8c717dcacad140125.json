{"id":"aIY4","dependencies":[{"name":"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/OBJECT DETECTION/App/package.json","includedInParent":true,"mtime":1726047873181},{"name":"/Users/coding/Library/Mobile Documents/com~apple~CloudDocs/Documents/vs/ML-Projects/OBJECT DETECTION/App/node_modules/framer-motion/package.json","includedInParent":true,"mtime":1726047863448}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.globalProjectionState=void 0;const e=exports.globalProjectionState={hasAnimatedSinceResize:!0,hasEverUpdated:!1};"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":0}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":13}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":20}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":35}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":43}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":56}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":57}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":64}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":68}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":76}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":17,"column":1},"generated":{"line":1,"column":103}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":6,"column":0},"generated":{"line":1,"column":105}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","name":"globalProjectionState","original":{"line":6,"column":6},"generated":{"line":1,"column":111}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","name":"exports","original":{"line":6,"column":27},"generated":{"line":1,"column":113}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","name":"globalProjectionState","original":{"line":6,"column":27},"generated":{"line":1,"column":121}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":6,"column":30},"generated":{"line":1,"column":143}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","name":"hasAnimatedSinceResize","original":{"line":11,"column":4},"generated":{"line":1,"column":144}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":11,"column":28},"generated":{"line":1,"column":168}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","name":"hasEverUpdated","original":{"line":16,"column":4},"generated":{"line":1,"column":170}},{"source":"../../node_modules/framer-motion/dist/es/projection/node/state.mjs","original":{"line":16,"column":20},"generated":{"line":1,"column":186}}],"sources":{"../../node_modules/framer-motion/dist/es/projection/node/state.mjs":"/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n"},"lineCount":null}},"error":null,"hash":"4ecd4de4e4949e4ba907ef2794326406","cacheData":{"env":{}}}